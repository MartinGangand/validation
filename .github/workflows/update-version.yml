name: Update Version Number

on:
  push:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  update-version-number:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Update Version Number
        id: update_version
        run: |
          # Extract the current version (e.g., "0.0.2")
           OLD_VERSION=$(grep ^version pyproject.toml | cut -d '"' -f 2)
           echo "Old version: $OLD_VERSION"
          
           # Increment the patch version (third number after the dots)
           IFS='.' read -r major minor patch <<< "$OLD_VERSION"
           patch=$((patch + 1))
           NEW_VERSION="$major.$minor.$patch"
           echo "New version: $NEW_VERSION"
           echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT
          
           # Replace the version in pyproject.toml
           sed -i "s+version = \"$OLD_VERSION\"+version = \"$NEW_VERSION\"+g" pyproject.toml
           echo "New version: $NEW_VERSION"
 

      - name: Config user
        run: |
          echo "New version: ${{ steps.update_version.outputs.NEW_VERSION }}"
          git config user.name "$GITHUB_ACTOR"
          echo ----- "$GITHUB_ACTOR"
          echo ++++++ "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git commit -a -m "Update version number to ${{ steps.update_version.outputs.NEW_VERSION }}"
          git push origin HEAD:update-version
